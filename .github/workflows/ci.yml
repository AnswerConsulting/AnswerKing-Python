name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

 
jobs:
  unit_test_and_sonar_cloud_report:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DATABASE_PASS }}
          MYSQL_DATABASE: answerking_app
        ports: ['3306:3306']
    
    env:
        DATABASE_NAME: answerking_app
        DATABASE_USER: ${{ secrets.DATABASE_USER }}
        DATABASE_PASS: ${{ secrets.DATABASE_PASS }}
        DATABASE_HOST: 127.0.0.1
        DATABASE_PORT: 3306
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DJANGO_SETTINGS_MODULE: answerking.settings.development
    
    steps:
      - uses : actions/checkout@v3
      - uses: ./.github/actions/dependencies
      - uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
            -Dsonar.projectKey=answerking-python
            -Dsonar.organization=answerdigitalanswerkingpython
            -Dsonar.scm.provider=git
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false
      - name: Run Migrations
        run: |
          poetry run python manage.py makemigrations
          poetry run python manage.py migrate
      - name: Run Unit Tests
        run: poetry run python manage.py test
      - name: generate coverage tests
        run: poetry run coverage run --omit=*/migrations/*,*/answerking/* manage.py test --noinput
      - name: generate report
        run: poetry run coverage xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 

  black_test:
    runs-on: ubuntu-latest
    steps:
      - uses : actions/checkout@v3
      - uses: ./.github/actions/dependencies
      - name: Run Black Test
        run: poetry run black . --line-length=79 --check


  pycodestyle_test:
    runs-on: ubuntu-latest
    steps:
      - uses : actions/checkout@v3
      - uses: ./.github/actions/dependencies
      - name: Run Pycodestyle Test
        run: poetry run pycodestyle . --ignore=E501


  pyright_test:
    runs-on: ubuntu-latest
    steps:
      - uses : actions/checkout@v3
      - uses: ./.github/actions/dependencies
      - name: Run Pyright Test
        run: poetry run pyright
  

